// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package user

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson56de76c1DecodeAPIGatewayInternalClientsUserService(in *jlexer.Lexer, out *UpdatePasswordReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "email":
			out.Email = string(in.String())
		case "old_password":
			out.OldPassword = string(in.String())
		case "new_password":
			out.NewPassword = string(in.String())
		case "token":
			out.Token = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsUserService(out *jwriter.Writer, in UpdatePasswordReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix[1:])
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"old_password\":"
		out.RawString(prefix)
		out.String(string(in.OldPassword))
	}
	{
		const prefix string = ",\"new_password\":"
		out.RawString(prefix)
		out.String(string(in.NewPassword))
	}
	{
		const prefix string = ",\"token\":"
		out.RawString(prefix)
		out.String(string(in.Token))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UpdatePasswordReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UpdatePasswordReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UpdatePasswordReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UpdatePasswordReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService(l, v)
}
func easyjson56de76c1DecodeAPIGatewayInternalClientsUserService1(in *jlexer.Lexer, out *SetPermissionLevelReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = int64(in.Int64())
		case "permission_level":
			out.PermissionLevel = int64(in.Int64())
		case "initiator_id":
			out.InitiatorID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsUserService1(out *jwriter.Writer, in SetPermissionLevelReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.UserID))
	}
	{
		const prefix string = ",\"permission_level\":"
		out.RawString(prefix)
		out.Int64(int64(in.PermissionLevel))
	}
	{
		const prefix string = ",\"initiator_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.InitiatorID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SetPermissionLevelReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SetPermissionLevelReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SetPermissionLevelReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SetPermissionLevelReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService1(l, v)
}
func easyjson56de76c1DecodeAPIGatewayInternalClientsUserService2(in *jlexer.Lexer, out *RegisterReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsUserService2(out *jwriter.Writer, in RegisterReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix[1:])
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RegisterReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RegisterReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RegisterReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RegisterReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService2(l, v)
}
func easyjson56de76c1DecodeAPIGatewayInternalClientsUserService3(in *jlexer.Lexer, out *LoginReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsUserService3(out *jwriter.Writer, in LoginReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix[1:])
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v LoginReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v LoginReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *LoginReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *LoginReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService3(l, v)
}
func easyjson56de76c1DecodeAPIGatewayInternalClientsUserService4(in *jlexer.Lexer, out *IsUserActiveReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsUserService4(out *jwriter.Writer, in IsUserActiveReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.UserID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v IsUserActiveReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v IsUserActiveReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *IsUserActiveReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *IsUserActiveReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService4(l, v)
}
func easyjson56de76c1DecodeAPIGatewayInternalClientsUserService5(in *jlexer.Lexer, out *GetPermissionLevelReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsUserService5(out *jwriter.Writer, in GetPermissionLevelReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.UserID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetPermissionLevelReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetPermissionLevelReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetPermissionLevelReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetPermissionLevelReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService5(l, v)
}
func easyjson56de76c1DecodeAPIGatewayInternalClientsUserService6(in *jlexer.Lexer, out *FillUserProfileReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		case "lastname":
			out.Lastname = string(in.String())
		case "middle_name":
			out.MiddleName = string(in.String())
		case "date_of_birth":
			out.DateOfBirth = string(in.String())
		case "classname":
			out.Classname = string(in.String())
		case "user_id":
			out.UserID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsUserService6(out *jwriter.Writer, in FillUserProfileReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"lastname\":"
		out.RawString(prefix)
		out.String(string(in.Lastname))
	}
	{
		const prefix string = ",\"middle_name\":"
		out.RawString(prefix)
		out.String(string(in.MiddleName))
	}
	{
		const prefix string = ",\"date_of_birth\":"
		out.RawString(prefix)
		out.String(string(in.DateOfBirth))
	}
	{
		const prefix string = ",\"classname\":"
		out.RawString(prefix)
		out.String(string(in.Classname))
	}
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.UserID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FillUserProfileReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FillUserProfileReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FillUserProfileReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FillUserProfileReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService6(l, v)
}
func easyjson56de76c1DecodeAPIGatewayInternalClientsUserService7(in *jlexer.Lexer, out *ChangeUserStatusReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = int64(in.Int64())
		case "initiator_id":
			out.InitiatorID = int64(in.Int64())
		case "active":
			out.Active = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsUserService7(out *jwriter.Writer, in ChangeUserStatusReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.UserID))
	}
	{
		const prefix string = ",\"initiator_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.InitiatorID))
	}
	{
		const prefix string = ",\"active\":"
		out.RawString(prefix)
		out.Bool(bool(in.Active))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChangeUserStatusReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChangeUserStatusReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsUserService7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChangeUserStatusReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChangeUserStatusReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsUserService7(l, v)
}
