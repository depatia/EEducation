{
    "swagger": "2.0",
    "info": {
        "title": "EEducation API service",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:1234",
    "basePath": "/",
    "paths": {
        "/admin/lessons": {
            "post": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Set new lesson",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Set new lesson \\\\ ADMIN ONLY",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lesson_service.SetLessonReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "409": {
                        "description": "Lesson already exists"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/admin/profiles": {
            "delete": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Delete user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete user \\\\ ADMIN ONLY",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Request",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Change user activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Change user activity \\\\ ADMIN ONLY",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.ChangeUserStatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/admin/profiles/permissions": {
            "patch": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Set user's permission lvl",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Set user's permission lvl \\\\ ADMIN ONLY",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.SetPermissionLevelReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/lessons/grades": {
            "get": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Get all student lesson grades by student id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get student's lesson grades",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request",
                        "name": "lesson",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/grade.Grade"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/lessons/grades/all": {
            "get": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Get all student lesson grades by student id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all student's lesson grades",
                "parameters": [
                    {
                        "type": "string",
                        "description": "method could call without any parameters",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/grade.Grade"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Invalid credentinals"
                    },
                    "404": {
                        "description": "User with this email not found"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/profile/change-password": {
            "patch": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Update user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update user password",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdatePasswordReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Incorrect old password"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/profile/edit": {
            "put": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Fill user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Fill user profile",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.FillUserProfileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/reg": {
            "post": {
                "description": "Registgration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RegisterReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "409": {
                        "description": "User already exists"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/schedule": {
            "get": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Get weekly schedule by class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get weekly schedule by class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request",
                        "name": "classname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Class not found"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/teacher/lessons/grades": {
            "post": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Set grade by student id \u0026\u0026 lesson",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Set grade",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grade.SetGradeReq"
                        }
                    },
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grade.SetGradeReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Grade created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "409": {
                        "description": "Grade already exists"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Delete grade",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete grade",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grade.DeleteGradeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grade deleted"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Grade not found"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Change grade",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Change grade",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grade.ChangeGradeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grade changed"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Grade not found"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/teacher/lessons/set-grades": {
            "get": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Get students by classname",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get students by classname",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request",
                        "name": "classname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Class not found"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/teacher/lessons/term-grades": {
            "post": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Set term grade",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Set term grade",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grade.SetTermGradeReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Grade created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "406": {
                        "description": "Not enough grades"
                    },
                    "409": {
                        "description": "Grade already exists"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/teacher/schedule/set-schedule/import": {
            "post": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Get weekly schedule by class",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get weekly schedule by class",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Scheudle excel file",
                        "name": "uploaded-schedule",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sheet",
                        "name": "sheet",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        },
        "/teacher/schedule/set-schedule/lessons": {
            "patch": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Set homework",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Set homework",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schedule.SetHomeworkReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Homework updated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Lesson not found"
                    },
                    "500": {
                        "description": "Internal"
                    }
                }
            }
        }
    },
    "definitions": {
        "grade.ChangeGradeReq": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "grade": {
                    "type": "integer"
                },
                "lesson_name": {
                    "type": "string"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "grade.DeleteGradeReq": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "lesson_name": {
                    "type": "string"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "grade.Grade": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "lessonName": {
                    "type": "string"
                },
                "studentId": {
                    "type": "integer"
                }
            }
        },
        "grade.SetGradeReq": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "integer"
                },
                "grade": {
                    "type": "integer"
                },
                "lesson_name": {
                    "type": "string"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "grade.SetTermGradeReq": {
            "type": "object",
            "properties": {
                "lesson_name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "lesson_service.SetLessonReq": {
            "type": "object",
            "properties": {
                "class_name": {
                    "type": "string"
                },
                "lesson_name": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "integer"
                }
            }
        },
        "schedule.SetHomeworkReq": {
            "type": "object",
            "properties": {
                "classname": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "homework": {
                    "type": "string"
                },
                "lesson_name": {
                    "type": "string"
                }
            }
        },
        "user.ChangeUserStatusReq": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "initiator_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "user.FillUserProfileReq": {
            "type": "object",
            "properties": {
                "classname": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "user.LoginReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.RegisterReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.SetPermissionLevelReq": {
            "type": "object",
            "properties": {
                "initiator_id": {
                    "type": "integer"
                },
                "permission_level": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "user.UpdatePasswordReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "TokenAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}