// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package grade

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService(in *jlexer.Lexer, out *SetTermGradeReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = int64(in.Int64())
		case "lesson_name":
			out.LessonName = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService(out *jwriter.Writer, in SetTermGradeReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.UserID))
	}
	{
		const prefix string = ",\"lesson_name\":"
		out.RawString(prefix)
		out.String(string(in.LessonName))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SetTermGradeReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SetTermGradeReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SetTermGradeReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SetTermGradeReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService(l, v)
}
func easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService1(in *jlexer.Lexer, out *SetGradeReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "student_id":
			out.StudentID = int64(in.Int64())
		case "device_id":
			out.DeviceID = int(in.Int())
		case "lesson_name":
			out.LessonName = string(in.String())
		case "grade":
			out.Grade = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService1(out *jwriter.Writer, in SetGradeReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"student_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.StudentID))
	}
	{
		const prefix string = ",\"device_id\":"
		out.RawString(prefix)
		out.Int(int(in.DeviceID))
	}
	{
		const prefix string = ",\"lesson_name\":"
		out.RawString(prefix)
		out.String(string(in.LessonName))
	}
	{
		const prefix string = ",\"grade\":"
		out.RawString(prefix)
		out.Int64(int64(in.Grade))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SetGradeReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SetGradeReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SetGradeReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SetGradeReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService1(l, v)
}
func easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService2(in *jlexer.Lexer, out *Grade) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "student_id":
			out.StudentId = int64(in.Int64())
		case "lesson_name":
			out.LessonName = string(in.String())
		case "date":
			out.Date = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService2(out *jwriter.Writer, in Grade) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"student_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.StudentId))
	}
	{
		const prefix string = ",\"lesson_name\":"
		out.RawString(prefix)
		out.String(string(in.LessonName))
	}
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix)
		out.String(string(in.Date))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Grade) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Grade) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Grade) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Grade) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService2(l, v)
}
func easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService3(in *jlexer.Lexer, out *GetLessonGradesResp) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "student_id":
			out.StudentID = int64(in.Int64())
		case "lesson_name":
			out.LessonName = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService3(out *jwriter.Writer, in GetLessonGradesResp) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"student_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.StudentID))
	}
	{
		const prefix string = ",\"lesson_name\":"
		out.RawString(prefix)
		out.String(string(in.LessonName))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetLessonGradesResp) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetLessonGradesResp) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetLessonGradesResp) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetLessonGradesResp) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService3(l, v)
}
func easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService4(in *jlexer.Lexer, out *DeleteGradeReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "student_id":
			out.StudentID = int64(in.Int64())
		case "lesson_name":
			out.LessonName = string(in.String())
		case "date":
			out.Date = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService4(out *jwriter.Writer, in DeleteGradeReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"student_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.StudentID))
	}
	{
		const prefix string = ",\"lesson_name\":"
		out.RawString(prefix)
		out.String(string(in.LessonName))
	}
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix)
		out.String(string(in.Date))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DeleteGradeReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DeleteGradeReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DeleteGradeReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DeleteGradeReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService4(l, v)
}
func easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService5(in *jlexer.Lexer, out *ChangeGradeReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "student_id":
			out.StudentID = int64(in.Int64())
		case "lesson_name":
			out.LessonName = string(in.String())
		case "grade":
			out.Grade = int64(in.Int64())
		case "date":
			out.Date = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService5(out *jwriter.Writer, in ChangeGradeReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"student_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.StudentID))
	}
	{
		const prefix string = ",\"lesson_name\":"
		out.RawString(prefix)
		out.String(string(in.LessonName))
	}
	{
		const prefix string = ",\"grade\":"
		out.RawString(prefix)
		out.Int64(int64(in.Grade))
	}
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix)
		out.String(string(in.Date))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChangeGradeReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChangeGradeReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeAPIGatewayInternalClientsGradeService5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChangeGradeReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChangeGradeReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeAPIGatewayInternalClientsGradeService5(l, v)
}
